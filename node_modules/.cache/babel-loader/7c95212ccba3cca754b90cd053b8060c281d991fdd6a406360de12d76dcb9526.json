{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prathamesh.Sawardeka.APTL\\\\StudioProjects\\\\my_portfolio\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      backgroundColor: 'transparent'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(TypingAnimation, {\n          text: \"This is a typing animation example!\",\n          speed: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nconst TypingAnimation = ({\n  text,\n  speed\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(true);\n  useEffect(() => {\n    let currentIndex = -1;\n    let interval;\n    const typeText = () => {\n      if (currentIndex < text.length) {\n        setDisplayedText(prev => prev + text[currentIndex]);\n        currentIndex++;\n      } else {\n        clearInterval(interval);\n        setTimeout(() => {\n          // Clear the text and restart typing animation after a short delay\n          setDisplayedText(\"\");\n          currentIndex = -1;\n          interval = setInterval(typeText, speed);\n        }, 3000); // Pause for 1 second before restarting\n      }\n    };\n    if (isTyping) {\n      interval = setInterval(typeText, speed);\n    }\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, [text, speed, isTyping]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: displayedText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n};\n_s(TypingAnimation, \"197poiVruyfgTEsInI+uD87q43I=\");\n_c2 = TypingAnimation;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"TypingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","TypingAnimation","text","speed","_c","_s","displayedText","setDisplayedText","isTyping","setIsTyping","currentIndex","interval","typeText","length","prev","clearInterval","setTimeout","setInterval","_c2","$RefreshReg$"],"sources":["C:/Users/Prathamesh.Sawardeka.APTL/StudioProjects/my_portfolio/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\" style={{ backgroundColor: 'transparent' }}>\r\n            <header className=\"App-header\">\r\n                <h1>Welcome to Portfolio</h1>\r\n                <p>\r\n                    <TypingAnimation text=\"This is a typing animation example!\" speed={100} />\r\n                </p>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst TypingAnimation = ({ text, speed }) => {\r\n    const [displayedText, setDisplayedText] = useState(\"\");\r\n    const [isTyping, setIsTyping] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let currentIndex = -1;\r\n        let interval;\r\n\r\n        const typeText = () => {\r\n            if (currentIndex < text.length) {\r\n                setDisplayedText((prev) => prev + text[currentIndex]);\r\n                currentIndex++;\r\n            } else {\r\n                clearInterval(interval);\r\n                setTimeout(() => {\r\n                    // Clear the text and restart typing animation after a short delay\r\n                    setDisplayedText(\"\");\r\n                    currentIndex = -1;\r\n                    interval = setInterval(typeText, speed);\r\n                }, 3000); // Pause for 1 second before restarting\r\n            }\r\n        };\r\n\r\n        if (isTyping) {\r\n            interval = setInterval(typeText, speed);\r\n        }\r\n\r\n        return () => clearInterval(interval); // Clean up the interval on component unmount\r\n    }, [text, speed, isTyping]);\r\n\r\n    return <span>{displayedText}</span>;\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAEX,oBACID,OAAA;IAAKE,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAE;IAAc,CAAE;IAAAC,QAAA,eAC3DL,OAAA;MAAQE,SAAS,EAAC,YAAY;MAAAG,QAAA,gBAC1BL,OAAA;QAAAK,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BT,OAAA;QAAAK,QAAA,eACIL,OAAA,CAACU,eAAe;UAACC,IAAI,EAAC,qCAAqC;UAACC,KAAK,EAAE;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACI,EAAA,GAZQZ,GAAG;AAcZ,MAAMS,eAAe,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAAAE,EAAA;EACzC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,IAAIqB,YAAY,GAAG,CAAC,CAAC;IACrB,IAAIC,QAAQ;IAEZ,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACnB,IAAIF,YAAY,GAAGR,IAAI,CAACW,MAAM,EAAE;QAC5BN,gBAAgB,CAAEO,IAAI,IAAKA,IAAI,GAAGZ,IAAI,CAACQ,YAAY,CAAC,CAAC;QACrDA,YAAY,EAAE;MAClB,CAAC,MAAM;QACHK,aAAa,CAACJ,QAAQ,CAAC;QACvBK,UAAU,CAAC,MAAM;UACb;UACAT,gBAAgB,CAAC,EAAE,CAAC;UACpBG,YAAY,GAAG,CAAC,CAAC;UACjBC,QAAQ,GAAGM,WAAW,CAACL,QAAQ,EAAET,KAAK,CAAC;QAC3C,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACd;IACJ,CAAC;IAED,IAAIK,QAAQ,EAAE;MACVG,QAAQ,GAAGM,WAAW,CAACL,QAAQ,EAAET,KAAK,CAAC;IAC3C;IAEA,OAAO,MAAMY,aAAa,CAACJ,QAAQ,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACT,IAAI,EAAEC,KAAK,EAAEK,QAAQ,CAAC,CAAC;EAE3B,oBAAOjB,OAAA;IAAAK,QAAA,EAAOU;EAAa;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AACvC,CAAC;AAACK,EAAA,CA/BIJ,eAAe;AAAAiB,GAAA,GAAfjB,eAAe;AAiCrB,eAAeT,GAAG;AAAC,IAAAY,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}